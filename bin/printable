#!/usr/bin/env perl
use warnings;
use strict;
use v5.10.0;

# on Cygwin:
#     apt-cyg install libpaper1 libpaper-bin
# on other systems:
#     it's part of something called libpaper.
#     git@github.com:naota/libpaper.git
# to list all paper sizes and their widths and heights:
#     paperconf -a -n -s
# to get the default paper size:
#     paperconf

our $opt_papersize;
our $opt_width;
our $opt_height;
our $opt_unit_type;
our $opt_color_type;
our @opt_modifiers;
our $opt_output_yaml;
our $opt_output_json;
our $opt_output_perl;

use Getopt::Long;
use Data::Dumper;
use Carp::Always;

use FindBin;
use lib "${FindBin::Bin}/../lib";
use My::Printable;

Getopt::Long::Configure(qw(bundling gnu_compat no_ignore_case));
Getopt::Long::GetOptions(
    "M|p|media|paper|paper-size=s"    => \$opt_papersize,
    "w|width=s"                       => \$opt_width,
    "h|height=s"                      => \$opt_height,
    "g|gray|grey|grayscale|greyscale" => sub { $opt_color_type = "grayscale"; },
    "c|color|colour"                  => sub { $opt_color_type = "color";     },
    "m|metric"                        => sub { $opt_unit_type = "metric";     },
    "i|imperial"                      => sub { $opt_unit_type = "imperial";   },
    "modifier=s"                      => sub { push(@opt_modifiers, $_[1]); },
    "output-yaml"                     => \$opt_output_yaml,
    "output-json"                     => \$opt_output_json,
    "output-perl"                     => \$opt_output_perl,
    "help|?" => sub {
        usage();
        exit(0);
    }
) or die("Type '$0 --help' for help.\n");

sub usage { print <<"EOF"; }
usage:
    $0 [<option> ...]
options:
    -M, -p, --media, --paper, --paper-size=<paper-size-name>|<custom-paper-size>
        Specify paper size (run paperconf -a -n -s to list paper sizes)
    -w, --width=<width>
    -h, --height=<height>
    -?, --help
<width> or <height>:
    <number> [<unit>]           <unit> defaults to pt
    <number>/<number> [<unit>]
<custom-paper-size>:
    <width> *|x <height>        height <unit> defaults to pt;
                                width <unit> defaults to same <unit> as height
examples:
    --width=8.5in       --paper-size='8.5in x 11in'     --paper-size=letter
    --width=612         --paper-size='612*792'
    --height=297mm      --paper-size='210.224x297.302mm'
EOF

my $p = My::Printable->new();
if ($opt_output_yaml || $opt_output_json || $opt_output_perl) {
    if ($opt_output_yaml) {
        $p->output_yaml;
    }
    if ($opt_output_json) {
        $p->output_json;
    }
    if ($opt_output_perl) {
        $p->output_perl;
    }
} else {
    $p->set_papersize($opt_papersize) if defined $opt_papersize;
    $p->set_width($opt_width)         if defined $opt_width;
    $p->set_height($opt_height)       if defined $opt_height;
    $p->unit_type($opt_unit_type)     if defined $opt_unit_type;
    $p->color_type($opt_color_type)   if defined $opt_color_type;
    $p->set_modifiers(@opt_modifiers);

    if (!scalar @ARGV) {
        die("No paper ruling argument specified.\n");
    }

    foreach my $arg (@ARGV) {
        $p->generate_paper($arg);
    }
}
