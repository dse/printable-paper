%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Tue Nov 20 23:24:51 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: A5 420 595 0 () ()
%%BoundingBox: 0 -1 420 596
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: A5
%%PageBoundingBox: 0 -1 420 596
420 596 cairo_set_page_size
%%EndPageSetup
q 0 -1 420 597 rectclip q
/CairoPattern {
  q
  Q
} bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 1701 /YStep 1701
   /BBox [0 0 1701 1701]
   /PaintProc { pop CairoPattern }
>>
[ 0.01 0 0 0.01 -2.834425 578.265796 ]
makepattern setpattern
-2.836 595.276 425.199 -595.277 re f
0.701961 0.701961 1 rg
0.48 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 595.276001 cm
0 8.504 m 419.527 8.504 l S Q
q 1 0 0 -1 0 595.276001 cm
0 25.512 m 419.527 25.512 l S Q
q 1 0 0 -1 0 595.276001 cm
0 42.52 m 419.527 42.52 l S Q
q 1 0 0 -1 0 595.276001 cm
0 59.527 m 419.527 59.527 l S Q
q 1 0 0 -1 0 595.276001 cm
0 76.535 m 419.527 76.535 l S Q
q 1 0 0 -1 0 595.276001 cm
0 93.543 m 419.527 93.543 l S Q
q 1 0 0 -1 0 595.276001 cm
0 110.551 m 419.527 110.551 l S Q
q 1 0 0 -1 0 595.276001 cm
0 127.559 m 419.527 127.559 l S Q
q 1 0 0 -1 0 595.276001 cm
0 144.566 m 419.527 144.566 l S Q
q 1 0 0 -1 0 595.276001 cm
0 161.574 m 419.527 161.574 l S Q
q 1 0 0 -1 0 595.276001 cm
0 178.582 m 419.527 178.582 l S Q
q 1 0 0 -1 0 595.276001 cm
0 195.59 m 419.527 195.59 l S Q
q 1 0 0 -1 0 595.276001 cm
0 212.598 m 419.527 212.598 l S Q
q 1 0 0 -1 0 595.276001 cm
0 229.605 m 419.527 229.605 l S Q
q 1 0 0 -1 0 595.276001 cm
0 246.613 m 419.527 246.613 l S Q
q 1 0 0 -1 0 595.276001 cm
0 263.621 m 419.527 263.621 l S Q
q 1 0 0 -1 0 595.276001 cm
0 280.629 m 419.527 280.629 l S Q
q 1 0 0 -1 0 595.276001 cm
0 297.637 m 419.527 297.637 l S Q
q 1 0 0 -1 0 595.276001 cm
0 314.645 m 419.527 314.645 l S Q
q 1 0 0 -1 0 595.276001 cm
0 331.652 m 419.527 331.652 l S Q
q 1 0 0 -1 0 595.276001 cm
0 348.66 m 419.527 348.66 l S Q
q 1 0 0 -1 0 595.276001 cm
0 365.668 m 419.527 365.668 l S Q
q 1 0 0 -1 0 595.276001 cm
0 382.676 m 419.527 382.676 l S Q
q 1 0 0 -1 0 595.276001 cm
0 399.684 m 419.527 399.684 l S Q
q 1 0 0 -1 0 595.276001 cm
0 416.691 m 419.527 416.691 l S Q
q 1 0 0 -1 0 595.276001 cm
0 433.699 m 419.527 433.699 l S Q
q 1 0 0 -1 0 595.276001 cm
0 450.711 m 419.527 450.711 l S Q
q 1 0 0 -1 0 595.276001 cm
0 467.719 m 419.527 467.719 l S Q
q 1 0 0 -1 0 595.276001 cm
0 484.727 m 419.527 484.727 l S Q
q 1 0 0 -1 0 595.276001 cm
0 501.73 m 419.527 501.73 l S Q
q 1 0 0 -1 0 595.276001 cm
0 518.738 m 419.527 518.738 l S Q
q 1 0 0 -1 0 595.276001 cm
0 535.746 m 419.527 535.746 l S Q
q 1 0 0 -1 0 595.276001 cm
0 552.758 m 419.527 552.758 l S Q
q 1 0 0 -1 0 595.276001 cm
0 569.766 m 419.527 569.766 l S Q
q 1 0 0 -1 0 595.276001 cm
0 586.773 m 419.527 586.773 l S Q
Q Q
showpage
%%Trailer
%%EOF
