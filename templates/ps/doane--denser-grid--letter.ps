%!PS-Adobe-3.0
%%Creator: cairo 1.14.8 (http://cairographics.org)
%%CreationDate: Tue Nov 20 23:23:44 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: Letter 612 792 0 () ()
%%BoundingBox: 0 0 612 792
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: Letter
%%PageBoundingBox: 0 0 612 792
612 792 cairo_set_page_size
%%EndPageSetup
q 0 0 612 792 rectclip q
/CairoPattern {
  q
  Q
} bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 64800 /YStep 600
   /BBox [0 0 64800 600]
   /PaintProc { pop CairoPattern }
>>
[ 0.01 0 0 0.01 -18 789 ]
makepattern setpattern
0 0 612 792 rectfill
/CairoPattern {
  q
  Q
} bind def
<< /PatternType 1
   /PaintType 1
   /TilingType 1
   /XStep 600 /YStep 82800
   /BBox [0 0 600 82800]
   /PaintProc { pop CairoPattern }
>>
[ 0.01 0 0 0.01 0 -18 ]
makepattern setpattern
0 0 612 792 rectfill
0.701961 0.701961 1 rg
0.96 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 792 cm
0 6 m 612 6 l S Q
q 1 0 0 -1 0 792 cm
0 24 m 612 24 l S Q
q 1 0 0 -1 0 792 cm
0 42 m 612 42 l S Q
q 1 0 0 -1 0 792 cm
0 60 m 612 60 l S Q
q 1 0 0 -1 0 792 cm
0 78 m 612 78 l S Q
q 1 0 0 -1 0 792 cm
0 96 m 612 96 l S Q
q 1 0 0 -1 0 792 cm
0 114 m 612 114 l S Q
q 1 0 0 -1 0 792 cm
0 132 m 612 132 l S Q
q 1 0 0 -1 0 792 cm
0 150 m 612 150 l S Q
q 1 0 0 -1 0 792 cm
0 168 m 612 168 l S Q
q 1 0 0 -1 0 792 cm
0 186 m 612 186 l S Q
q 1 0 0 -1 0 792 cm
0 204 m 612 204 l S Q
q 1 0 0 -1 0 792 cm
0 222 m 612 222 l S Q
q 1 0 0 -1 0 792 cm
0 240 m 612 240 l S Q
q 1 0 0 -1 0 792 cm
0 258 m 612 258 l S Q
q 1 0 0 -1 0 792 cm
0 276 m 612 276 l S Q
q 1 0 0 -1 0 792 cm
0 294 m 612 294 l S Q
q 1 0 0 -1 0 792 cm
0 312 m 612 312 l S Q
q 1 0 0 -1 0 792 cm
0 330 m 612 330 l S Q
q 1 0 0 -1 0 792 cm
0 348 m 612 348 l S Q
q 1 0 0 -1 0 792 cm
0 366 m 612 366 l S Q
q 1 0 0 -1 0 792 cm
0 384 m 612 384 l S Q
q 1 0 0 -1 0 792 cm
0 402 m 612 402 l S Q
q 1 0 0 -1 0 792 cm
0 420 m 612 420 l S Q
q 1 0 0 -1 0 792 cm
0 438 m 612 438 l S Q
q 1 0 0 -1 0 792 cm
0 456 m 612 456 l S Q
q 1 0 0 -1 0 792 cm
0 474 m 612 474 l S Q
q 1 0 0 -1 0 792 cm
0 492 m 612 492 l S Q
q 1 0 0 -1 0 792 cm
0 510 m 612 510 l S Q
q 1 0 0 -1 0 792 cm
0 528 m 612 528 l S Q
q 1 0 0 -1 0 792 cm
0 546 m 612 546 l S Q
q 1 0 0 -1 0 792 cm
0 564 m 612 564 l S Q
q 1 0 0 -1 0 792 cm
0 582 m 612 582 l S Q
q 1 0 0 -1 0 792 cm
0 600 m 612 600 l S Q
q 1 0 0 -1 0 792 cm
0 618 m 612 618 l S Q
q 1 0 0 -1 0 792 cm
0 636 m 612 636 l S Q
q 1 0 0 -1 0 792 cm
0 654 m 612 654 l S Q
q 1 0 0 -1 0 792 cm
0 672 m 612 672 l S Q
q 1 0 0 -1 0 792 cm
0 690 m 612 690 l S Q
q 1 0 0 -1 0 792 cm
0 708 m 612 708 l S Q
q 1 0 0 -1 0 792 cm
0 726 m 612 726 l S Q
q 1 0 0 -1 0 792 cm
0 744 m 612 744 l S Q
q 1 0 0 -1 0 792 cm
0 762 m 612 762 l S Q
q 1 0 0 -1 0 792 cm
0 780 m 612 780 l S Q
1 0.6 0.6 rg
q 1 0 0 -1 0 792 cm
63 0 m 63 792 l S Q
Q Q
showpage
%%Trailer
%%EOF
